DROP TABLE IF EXISTS mpa CASCADE;
DROP TABLE IF EXISTS film CASCADE;
DROP TABLE IF EXISTS genres CASCADE;
--DROP TABLE IF EXISTS genre CASCADE;
DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS friend CASCADE;
DROP TABLE IF EXISTS likes CASCADE;

create table IF NOT EXISTS mpa
(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar NOT NULL,
    description varchar NOT NULL
);

create table IF NOT EXISTS users
(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email varchar NOT NULL,
    login varchar NOT NULL,
    name varchar NOT NULL,
    birthday date NOT NULL
);

create table IF NOT EXISTS friend
(
    user_id INTEGER NOT NULL REFERENCES users (id),
    friend_id INTEGER NOT NULL REFERENCES users (id)
);

create table IF NOT EXISTS film
(
    id INTEGER  GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar NOT NULL,
    description varchar NOT NULL,
    duration INTEGER NOT NULL,
    releaseDate date NOT NULL,
    mpa INTEGER REFERENCES mpa (id)
);

create table IF NOT EXISTS likes
(
    film_id INTEGER NOT NULL REFERENCES film (id),
    user_id INTEGER NOT NULL REFERENCES users (id)
);

create table IF NOT EXISTS friendship_status
(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar NOT NULL,
    description varchar NOT NULL
);

create table IF NOT EXISTS friend_status
(
    user_id INTEGER NOT NULL REFERENCES users (id),
    friend_id INTEGER NOT NULL REFERENCES users (id),
    status_id INTEGER NOT NULL REFERENCES friendship_status (id)
);

create table IF NOT EXISTS genres
(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar NOT NULL
);

create table IF NOT EXISTS genre
(
    film_id INTEGER NOT NULL REFERENCES film (id),
    genre_id INTEGER NOT NULL REFERENCES genres (id)
);

